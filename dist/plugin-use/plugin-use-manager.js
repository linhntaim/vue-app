"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.PluginUseManager=void 0;var _pluginUse=require("./plugin-use");var _vueUtils=require("@dsquare-gbu/vue-utils");var _constants=require("./constants");function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor}var PluginUseManager=/*#__PURE__*/function(){function PluginUseManager(){_classCallCheck(this,PluginUseManager);this.pluginUses={};this.pluginUses[_constants.SCOPE.always]=[];this.pluginUses[_constants.SCOPE["default"]]=[];this.pluginUses[_constants.SCOPE.failed]=[];this.attached={}}_createClass(PluginUseManager,[{key:"use",value:function use(name,_ref){var plugin=_ref.plugin,_ref$attached=_ref.attached,attached=_ref$attached===void 0?null:_ref$attached,_ref$options=_ref.options,options=_ref$options===void 0?null:_ref$options,_ref$promiseCallback=_ref.promiseCallback,promiseCallback=_ref$promiseCallback===void 0?null:_ref$promiseCallback,_ref$scope=_ref.scope,scope=_ref$scope===void 0?_constants.SCOPE.always:_ref$scope;this.pluginUses[scope].push(new _pluginUse.PluginUse(name,plugin,attached,options,promiseCallback))}},{key:"resetAttaching",value:function resetAttaching(){this.attached={};return this}},{key:"readyByScopes",value:function readyByScopes(scopes){var _this=this;var promiseManager=new _vueUtils.PromiseManager;scopes.forEach(function(scope){return _this.pluginUses[scope].forEach(function(pluginUse){return promiseManager.add(pluginUse.name,pluginUse.promise())})});return promiseManager.ready().then(function(){return scopes.forEach(function(scope){return _this.pluginUses[scope].forEach(function(pluginUse){return pluginUse.hasAttached&&(_this.attached[pluginUse.name]=pluginUse.attached)})})})}},{key:"ready",value:function ready(){var scope=arguments.length>0&&arguments[0]!==undefined?arguments[0]:_constants.SCOPE.always;return this.readyByScopes(scope===_constants.SCOPE.always?[scope]:[scope,_constants.SCOPE.always])}}]);return PluginUseManager}();exports.PluginUseManager=PluginUseManager;
//# sourceMappingURL=plugin-use-manager.js.map