{"version":3,"sources":["../../src/plugin-use/plugin-use-manager.js"],"names":["PluginUseManager","pluginUses","SCOPE","always","failed","attached","name","plugin","options","promiseCallback","scope","push","PluginUse","promiseManager","PromiseManager","forEach","pluginUse","add","promise","ready","then","hasAttached"],"mappings":"sGAAA,uCACA,gDACA,sC,unBAEaA,CAAAA,gB,yBACT,2BAAc,wCACV,KAAKC,UAAL,CAAkB,EAAlB,CACA,KAAKA,UAAL,CAAgBC,iBAAMC,MAAtB,EAAgC,EAAhC,CACA,KAAKF,UAAL,CAAgBC,2BAAhB,EAAiC,EAAjC,CACA,KAAKD,UAAL,CAAgBC,iBAAME,MAAtB,EAAgC,EAAhC,CACA,KAAKC,QAAL,CAAgB,EACnB,C,gDAED,aAAIC,IAAJ,MAAmG,IAAxFC,CAAAA,MAAwF,MAAxFA,MAAwF,oBAAhFF,QAAgF,CAAhFA,QAAgF,wBAArE,IAAqE,iCAA/DG,OAA+D,CAA/DA,OAA+D,uBAArD,IAAqD,wCAA/CC,eAA+C,CAA/CA,eAA+C,+BAA7B,IAA6B,sCAAvBC,KAAuB,CAAvBA,KAAuB,qBAAfR,iBAAMC,MAAS,YAC/F,KAAKF,UAAL,CAAgBS,KAAhB,EAAuBC,IAAvB,CAA4B,GAAIC,qBAAJ,CAAcN,IAAd,CAAoBC,MAApB,CAA4BF,QAA5B,CAAsCG,OAAtC,CAA+CC,eAA/C,CAA5B,CACH,C,8BAED,yBAAiB,CACb,KAAKJ,QAAL,CAAgB,EAAhB,CACA,MAAO,KACV,C,qBAED,gBAA4B,mBAAtBK,CAAAA,KAAsB,2DAAdR,iBAAMC,MAAQ,CACxB,GAAMU,CAAAA,cAAc,CAAG,GAAIC,yBAA3B,CACA,KAAKb,UAAL,CAAgBS,KAAhB,EAAuBK,OAAvB,CAA+B,SAAAC,SAAS,QAAIH,CAAAA,cAAc,CAACI,GAAf,CAAmBD,SAAS,CAACV,IAA7B,CAAmCU,SAAS,CAACE,OAAV,EAAnC,CAAJ,CAAxC,EACA,MAAOL,CAAAA,cAAc,CAACM,KAAf,GAAuBC,IAAvB,CAA4B,iBAAM,CAAA,KAAI,CAACnB,UAAL,CAAgBS,KAAhB,EAAuBK,OAAvB,CAA+B,SAAAC,SAAS,CAAI,CACjF,GAAIA,SAAS,CAACK,WAAd,CAA2B,CACvB,KAAI,CAAChB,QAAL,CAAcW,SAAS,CAACV,IAAxB,EAAgCU,SAAS,CAACX,QAC7C,CACJ,CAJwC,CAAN,CAA5B,CAKV,C","sourcesContent":["import {PluginUse} from './plugin-use'\r\nimport {PromiseManager} from '@dsquare-gbu/vue-utils'\r\nimport {SCOPE} from './constants'\r\n\r\nexport class PluginUseManager {\r\n    constructor() {\r\n        this.pluginUses = {}\r\n        this.pluginUses[SCOPE.always] = []\r\n        this.pluginUses[SCOPE.default] = []\r\n        this.pluginUses[SCOPE.failed] = []\r\n        this.attached = {}\r\n    }\r\n\r\n    use(name, {plugin, attached = null, options = null, promiseCallback = null, scope = SCOPE.always}) {\r\n        this.pluginUses[scope].push(new PluginUse(name, plugin, attached, options, promiseCallback))\r\n    }\r\n\r\n    resetAttaching() {\r\n        this.attached = {}\r\n        return this\r\n    }\r\n\r\n    ready(scope = SCOPE.always) {\r\n        const promiseManager = new PromiseManager\r\n        this.pluginUses[scope].forEach(pluginUse => promiseManager.add(pluginUse.name, pluginUse.promise()))\r\n        return promiseManager.ready().then(() => this.pluginUses[scope].forEach(pluginUse => {\r\n            if (pluginUse.hasAttached) {\r\n                this.attached[pluginUse.name] = pluginUse.attached\r\n            }\r\n        }))\r\n    }\r\n}\r\n"],"file":"plugin-use-manager.js"}