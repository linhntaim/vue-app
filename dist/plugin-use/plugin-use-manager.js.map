{"version":3,"sources":["../../src/plugin-use/plugin-use-manager.js"],"names":["PluginUseManager","pluginUses","SCOPE","always","failed","attached","name","plugin","options","promiseCallback","scope","push","PluginUse","scopes","promiseManager","PromiseManager","forEach","pluginUse","add","promise","ready","then","hasAttached","readyByScopes"],"mappings":"sGAAA,uCACA,gDACA,sC,unBAEaA,CAAAA,gB,yBACT,2BAAc,wCACV,KAAKC,UAAL,CAAkB,EAAlB,CACA,KAAKA,UAAL,CAAgBC,iBAAMC,MAAtB,EAAgC,EAAhC,CACA,KAAKF,UAAL,CAAgBC,2BAAhB,EAAiC,EAAjC,CACA,KAAKD,UAAL,CAAgBC,iBAAME,MAAtB,EAAgC,EAAhC,CACA,KAAKC,QAAL,CAAgB,EACnB,C,gDAED,aAAIC,IAAJ,MAAmG,IAAxFC,CAAAA,MAAwF,MAAxFA,MAAwF,oBAAhFF,QAAgF,CAAhFA,QAAgF,wBAArE,IAAqE,iCAA/DG,OAA+D,CAA/DA,OAA+D,uBAArD,IAAqD,wCAA/CC,eAA+C,CAA/CA,eAA+C,+BAA7B,IAA6B,sCAAvBC,KAAuB,CAAvBA,KAAuB,qBAAfR,iBAAMC,MAAS,YAC/F,KAAKF,UAAL,CAAgBS,KAAhB,EAAuBC,IAAvB,CAA4B,GAAIC,qBAAJ,CAAcN,IAAd,CAAoBC,MAApB,CAA4BF,QAA5B,CAAsCG,OAAtC,CAA+CC,eAA/C,CAA5B,CACH,C,8BAED,yBAAiB,CACb,KAAKJ,QAAL,CAAgB,EAAhB,CACA,MAAO,KACV,C,6BAED,uBAAcQ,MAAd,CAAsB,gBAClB,GAAMC,CAAAA,cAAc,CAAG,GAAIC,yBAA3B,CACAF,MAAM,CAACG,OAAP,CACI,SAAAN,KAAK,QAAI,CAAA,KAAI,CAACT,UAAL,CAAgBS,KAAhB,EAAuBM,OAAvB,CACL,SAAAC,SAAS,QAAIH,CAAAA,cAAc,CAACI,GAAf,CAAmBD,SAAS,CAACX,IAA7B,CAAmCW,SAAS,CAACE,OAAV,EAAnC,CAAJ,CADJ,CAAJ,CADT,EAKA,MAAOL,CAAAA,cAAc,CAACM,KAAf,GACFC,IADE,CACG,iBAAMR,CAAAA,MAAM,CAACG,OAAP,CACR,SAAAN,KAAK,QAAI,CAAA,KAAI,CAACT,UAAL,CAAgBS,KAAhB,EAAuBM,OAAvB,CACL,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACK,WAAV,GAA0B,KAAI,CAACjB,QAAL,CAAcY,SAAS,CAACX,IAAxB,EAAgCW,SAAS,CAACZ,QAApE,CAAJ,CADJ,CAAJ,CADG,CAAN,CADH,CAMV,C,qBAED,gBAA4B,IAAtBK,CAAAA,KAAsB,2DAAdR,iBAAMC,MAAQ,CACxB,MAAO,MAAKoB,aAAL,CAAmBb,KAAK,GAAKR,iBAAMC,MAAhB,CAAyB,CAACO,KAAD,CAAzB,CAAmC,CAACA,KAAD,CAAQR,iBAAMC,MAAd,CAAtD,CACV,C","sourcesContent":["import {PluginUse} from './plugin-use'\r\nimport {PromiseManager} from '@dsquare-gbu/vue-utils'\r\nimport {SCOPE} from './constants'\r\n\r\nexport class PluginUseManager {\r\n    constructor() {\r\n        this.pluginUses = {}\r\n        this.pluginUses[SCOPE.always] = []\r\n        this.pluginUses[SCOPE.default] = []\r\n        this.pluginUses[SCOPE.failed] = []\r\n        this.attached = {}\r\n    }\r\n\r\n    use(name, {plugin, attached = null, options = null, promiseCallback = null, scope = SCOPE.always}) {\r\n        this.pluginUses[scope].push(new PluginUse(name, plugin, attached, options, promiseCallback))\r\n    }\r\n\r\n    resetAttaching() {\r\n        this.attached = {}\r\n        return this\r\n    }\r\n\r\n    readyByScopes(scopes) {\r\n        const promiseManager = new PromiseManager\r\n        scopes.forEach(\r\n            scope => this.pluginUses[scope].forEach(\r\n                pluginUse => promiseManager.add(pluginUse.name, pluginUse.promise()),\r\n            ),\r\n        )\r\n        return promiseManager.ready()\r\n            .then(() => scopes.forEach(\r\n                scope => this.pluginUses[scope].forEach(\r\n                    pluginUse => pluginUse.hasAttached && (this.attached[pluginUse.name] = pluginUse.attached),\r\n                ),\r\n            ))\r\n    }\r\n\r\n    ready(scope = SCOPE.always) {\r\n        return this.readyByScopes(scope === SCOPE.always ? [scope] : [scope, SCOPE.always])\r\n    }\r\n}\r\n"],"file":"plugin-use-manager.js"}