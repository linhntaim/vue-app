{"version":3,"sources":["../../src/plugin-use/plugin-use-manager.js"],"names":["PromiseManager","SCOPE","PluginUse","PluginUseManager","constructor","pluginUses","always","default","failed","attached","use","name","plugin","options","promiseCallback","scope","push","resetAttaching","ready","promiseManager","forEach","pluginUse","add","promise","then","hasAttached"],"mappings":"AAAA,OAAQA,cAAR,KAA6B,wBAA7B,CACA,OAAQC,KAAR,KAAoB,aAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAEA,cAAe,MAAMC,CAAAA,gBAAiB,CAClCC,WAAW,EAAG,CACV,KAAKC,UAAL,CAAkB,EAAlB,CACA,KAAKA,UAAL,CAAgBJ,KAAK,CAACK,MAAtB,EAAgC,EAAhC,CACA,KAAKD,UAAL,CAAgBJ,KAAK,CAACM,OAAtB,EAAiC,EAAjC,CACA,KAAKF,UAAL,CAAgBJ,KAAK,CAACO,MAAtB,EAAgC,EAAhC,CACA,KAAKC,QAAL,CAAgB,EACnB,CAEDC,GAAG,CAACC,IAAD,CAAO,CAACC,MAAD,CAASH,QAAQ,CAAG,IAApB,CAA0BI,OAAO,CAAG,IAApC,CAA0CC,eAAe,CAAG,IAA5D,CAAkEC,KAAK,CAAGd,KAAK,CAACK,MAAhF,CAAP,CAAgG,CAC/F,KAAKD,UAAL,CAAgBU,KAAhB,EAAuBC,IAAvB,CAA4B,GAAId,CAAAA,SAAJ,CAAcS,IAAd,CAAoBC,MAApB,CAA4BH,QAA5B,CAAsCI,OAAtC,CAA+CC,eAA/C,CAA5B,CACH,CAEDG,cAAc,EAAG,CACb,KAAKR,QAAL,CAAgB,EAAhB,CACA,MAAO,KACV,CAEDS,KAAK,CAACH,KAAK,CAAGd,KAAK,CAACK,MAAf,CAAuB,CACxB,KAAMa,CAAAA,cAAc,CAAG,GAAInB,CAAAA,cAA3B,CACA,KAAKK,UAAL,CAAgBU,KAAhB,EAAuBK,OAAvB,CAA+BC,SAAS,EAAIF,cAAc,CAACG,GAAf,CAAmBD,SAAS,CAACV,IAA7B,CAAmCU,SAAS,CAACE,OAAV,EAAnC,CAA5C,EACA,MAAOJ,CAAAA,cAAc,CAACD,KAAf,GAAuBM,IAAvB,CAA4B,IAAM,KAAKnB,UAAL,CAAgBU,KAAhB,EAAuBK,OAAvB,CAA+BC,SAAS,EAAI,CACjF,GAAIA,SAAS,CAACI,WAAd,CAA2B,CACvB,KAAKhB,QAAL,CAAcY,SAAS,CAACV,IAAxB,EAAgCU,SAAS,CAACZ,QAC7C,CACJ,CAJwC,CAAlC,CAKV,CA1BiC","sourcesContent":["import {PromiseManager} from '@dsquare-gbu/vue-utils'\r\nimport {SCOPE} from './constants'\r\nimport PluginUse from './plugin-use'\r\n\r\nexport default class PluginUseManager {\r\n    constructor() {\r\n        this.pluginUses = {}\r\n        this.pluginUses[SCOPE.always] = []\r\n        this.pluginUses[SCOPE.default] = []\r\n        this.pluginUses[SCOPE.failed] = []\r\n        this.attached = {}\r\n    }\r\n\r\n    use(name, {plugin, attached = null, options = null, promiseCallback = null, scope = SCOPE.always}) {\r\n        this.pluginUses[scope].push(new PluginUse(name, plugin, attached, options, promiseCallback))\r\n    }\r\n\r\n    resetAttaching() {\r\n        this.attached = {}\r\n        return this\r\n    }\r\n\r\n    ready(scope = SCOPE.always) {\r\n        const promiseManager = new PromiseManager\r\n        this.pluginUses[scope].forEach(pluginUse => promiseManager.add(pluginUse.name, pluginUse.promise()))\r\n        return promiseManager.ready().then(() => this.pluginUses[scope].forEach(pluginUse => {\r\n            if (pluginUse.hasAttached) {\r\n                this.attached[pluginUse.name] = pluginUse.attached\r\n            }\r\n        }))\r\n    }\r\n}\r\n"],"file":"plugin-use-manager.js"}